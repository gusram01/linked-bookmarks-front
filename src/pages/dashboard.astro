---
import Layout from '../layouts/Layout.astro';
import type { GetAuthReturn } from '@clerk/astro/server'

// Authentication and data fetching logic
const { getToken } = Astro.locals.auth() as unknown as GetAuthReturn;

let bookmarks = [];
let error = '';
let successMessage = '';

// Handle success message from URL params
const url = new URL(Astro.request.url);
if (url.searchParams.get('success')) {
  successMessage = url.searchParams.get('success') || '';
}

// Fetch bookmarks data
const token = await getToken();

if (!token) {
  error = 'User not authenticated';
} else {
  try {
    const response = await fetch('http://localhost:4200/api/links', {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    if (response.ok) {
      bookmarks = await response.json();
    } else {
      switch (response.status) {
        case 401:
          error = 'Authentication required';
          break;
        case 403:
          error = 'You don\'t have permission to view bookmarks';
          break;
        case 404:
          error = 'Bookmarks service not found';
          break;
        default:
          error = 'Failed to load bookmarks';
      }
    }
  } catch (e) {
    error = 'Unable to connect to API server';
  }
}

// View state calculations
const hasBookmarks = bookmarks.length > 0;
const showEmptyState = !hasBookmarks && !error;
const showError = !!error;
const showSuccess = !!successMessage;
---

<Layout title="My Bookmarks - Bookmark Manager">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header Section -->
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">My Bookmarks</h1>
        <p class="text-gray-600">
          {hasBookmarks ? `${bookmarks.length} saved ${bookmarks.length === 1 ? 'link' : 'links'}` : 'Manage your saved links'}
        </p>
      </div>
      <div class="mt-4 sm:mt-0">
        <a 
          href="/bookmarks/new"
          class="inline-flex items-center justify-center px-6 py-3 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-xl transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-sm hover:shadow-md"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Add Bookmark
        </a>
      </div>
    </div>

    <!-- Success Message -->
    {showSuccess && (
      <div class="mb-6 p-4 bg-green-50 border border-green-200 rounded-xl">
        <div class="flex items-center">
          <svg class="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <p class="text-green-700 font-medium">{successMessage}</p>
        </div>
      </div>
    )}

    <!-- Error Message -->
    {showError && (
      <div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-xl">
        <div class="flex items-center">
          <svg class="w-5 h-5 text-red-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <p class="text-red-700 font-medium">{error}</p>
        </div>
      </div>
    )}

    <!-- Empty State -->
    {showEmptyState && (
      <div class="text-center py-16">
        <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
          <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-900 mb-2">No bookmarks yet</h3>
        <p class="text-gray-600 mb-8 max-w-md mx-auto">
          Start building your collection by adding your first bookmark. Save any link you want to remember.
        </p>
        <a 
          href="/bookmarks/new" 
          class="inline-flex items-center justify-center px-6 py-3 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-xl transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 shadow-sm hover:shadow-md"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Add Your First Bookmark
        </a>
      </div>
    )}

    <!-- Bookmarks Grid -->
    {hasBookmarks && (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {bookmarks.map((bookmark: any) => (
          <div class="bg-white rounded-xl border border-gray-200 p-6 hover:shadow-lg transition-shadow duration-200 group">
            <div class="flex items-start justify-between mb-4">
              <div class="flex-1 min-w-0">
                <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors duration-200">
                  {bookmark.title}
                </h3>
                {bookmark.description && (
                  <p class="text-gray-600 text-sm mb-3 line-clamp-2">
                    {bookmark.description}
                  </p>
                )}
              </div>
            </div>
            
            <div class="flex items-center justify-between">
              <a 
                href={bookmark.url} 
                target="_blank" 
                rel="noopener noreferrer"
                class="flex items-center text-sm text-blue-600 hover:text-blue-700 font-medium truncate flex-1 mr-4 group-hover:underline"
              >
                <svg class="w-4 h-4 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
                <span class="truncate">{new URL(bookmark.url).hostname}</span>
              </a>
              
              <div class="flex items-center space-x-2">
                <a 
                  href={`/bookmarks/edit/${bookmark.id}`} 
                  class="p-2 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-colors duration-200"
                  title="Edit bookmark"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                </a>
                <form method="POST" action="/api/bookmarks/delete" class="inline">
                  <input type="hidden" name="id" value={bookmark.id} />
                  <button 
                    type="submit" 
                    onclick="return confirm('Are you sure you want to delete this bookmark?')"
                    class="p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200"
                    title="Delete bookmark"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                  </button>
                </form>
              </div>
            </div>
          </div>
        ))}
      </div>
    )}
  </div>
</Layout>